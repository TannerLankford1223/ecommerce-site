version: "3.9"

# This Docker-Compose file creates databases for each service and a RabbitMQ container as well as any tools used for
# testing and QA. Ports are exposed, so they can be used by locally ran instances of the backend services for
# development.
services:
  products-service-db:
    image: postgres:14
    container_name: "product-service-db"
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: product
    volumes:
      - db-data-dev:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq

  SonarQube:
    image: sonarqube:lts-community
    container_name: "SonarQube"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: ${SONAR_USER}
      SONAR_JDBC_PASSWORD: ${SONAR_PASSWORD}
    volumes:
      - SonarQube_data:/opt/SonarQube/data
      - SonarQube_extensions:/opt/SonarQube/extensions
      - SonarQube_logs:/opt/SonarQube/logs
    ports:
      - "9000:9000"

  sonar-db:
    image: postgres:14
    container_name: "sonar-db"
    environment:
      POSTGRES_USER: ${SONAR_USER}
      POSTGRES_PASSWORD: ${SONAR_PASSWORD}
    volumes:
      - sonar_db:/var/lib/postgresql
      - sonar_db_data:/var/lib/postgresql/data
    ports:
      - "5431:5432"


volumes:
  db-data-dev:
    driver: local
  SonarQube_data:
  SonarQube_extensions:
  SonarQube_logs:
  sonar_db:
  sonar_db_data:

networks:
  rabbitmq:
    driver: bridge